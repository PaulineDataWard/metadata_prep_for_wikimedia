library(tidyverse)
library(here)
# Read in metadata from source repo CSV
df_datashare_metadata <- read_csv(here("metadata", "source_repo_raw_export_UK_comp_collecn10283-4857.csv"))
View(df_datashare_metadata)
problems(df_datashare_metadata)
library(tidyverse)
library(here)
install.packages("here")
install.packages("here")
library(tidyverse)
library(here)
library(readr)
source_repo_raw_export_UK_comp_collecn10283_4857 <- read_csv("metadata/source_repo_raw_export_UK_comp_collecn10283-4857.csv",
col_types = cols(`dc.contributor.other[en_UK]` = col_character(),
`dc.contributor[en]` = col_character(),
`dc.coverage.spatial[en]` = col_character(),
`dc.coverage.spatial[en_UK]` = col_character(),
`dc.description.abstract[en_UK]` = col_character(),
`dc.identifier.uri[]` = col_character(),
`dc.language.iso[]` = col_skip(),
`dc.language.iso[en_UK]` = col_skip(),
`dc.publisher[en_UK]` = col_character(),
`dc.relation.isreferencedby[en_UK]` = col_character(),
`dc.relation.isversionof[]` = col_character(),
`dc.relation.isversionof[en_UK]` = col_character(),
`dc.rights[]` = col_character(),
`dc.subject.classification[en_UK]` = col_character(),
`dc.subject[en_UK]` = col_character(),
`dc.title[en_UK]` = col_character(),
`dc.type[en_UK]` = col_character(),
`ds.not-emailable.item[en]` = col_skip()))
View(source_repo_raw_export_UK_comp_collecn10283_4857)
library(tidyverse)
library(here)
library(readr)
# Read in metadata from source repo CSV
# df_datashare_metadata <- read_csv(here("metadata", "source_repo_raw_export_UK_comp_collecn10283-4857.csv"))
df_source_repo_raw_export_UK_comp_collecn10283_4857 <- read_csv("metadata/source_repo_raw_export_UK_comp_collecn10283-4857.csv",
df_source_repo_raw_export_UK_comp_collecn10283_4857 <- read_csv("metadata/source_repo_raw_export_UK_comp_collecn10283-4857.csv",
col_types = cols(`dc.contributor.other[en_UK]` = col_character(),
`dc.contributor[en]` = col_character(),
`dc.coverage.spatial[en]` = col_character(),
`dc.coverage.spatial[en_UK]` = col_character(),
`dc.description.abstract[en_UK]` = col_character(),
`dc.identifier.uri[]` = col_character(),
`dc.language.iso[]` = col_skip(),
`dc.language.iso[en_UK]` = col_skip(),
`dc.publisher[en_UK]` = col_character(),
`dc.relation.isreferencedby[en_UK]` = col_character(),
`dc.relation.isversionof[]` = col_character(),
`dc.relation.isversionof[en_UK]` = col_character(),
`dc.rights[]` = col_character(),
`dc.subject.classification[en_UK]` = col_character(),
`dc.subject[en_UK]` = col_character(),
`dc.title[en_UK]` = col_character(),
`dc.type[en_UK]` = col_character(),
`ds.not-emailable.item[en]` = col_skip()))
library(tidyverse)
library(here)
library(readr)
df_source_repo_raw_export_UK_comp_collecn10283_4857 <- read_csv("metadata/source_repo_raw_export_UK_comp_collecn10283-4857.csv",
col_types = cols(`dc.contributor.other[en_UK]` = col_character(),
`dc.contributor[en]` = col_character(),
`dc.coverage.spatial[en]` = col_character(),
`dc.coverage.spatial[en_UK]` = col_character(),
`dc.description.abstract[en_UK]` = col_character(),
`dc.identifier.uri[]` = col_character(),
`dc.language.iso[]` = col_skip(),
`dc.language.iso[en_UK]` = col_skip(),
`dc.publisher[en_UK]` = col_character(),
`dc.relation.isreferencedby[en_UK]` = col_character(),
`dc.relation.isversionof[]` = col_character(),
`dc.relation.isversionof[en_UK]` = col_character(),
`dc.rights[]` = col_character(),
`dc.subject.classification[en_UK]` = col_character(),
`dc.subject[en_UK]` = col_character(),
`dc.title[en_UK]` = col_character(),
`dc.type[en_UK]` = col_character(),
`ds.not-emailable.item[en]` = col_skip()))
cleaned_df_source_repo <- df_source_repo_raw_export_UK_comp_collecn10283_4857 %>% clean_names()
library(janitor)
cleaned_df_source_repo <- df_source_repo_raw_export_UK_comp_collecn10283_4857 %>% clean_names()
view(cleaned_df_source_repo)
type(cleaned_df_source_repo)
library(tidyverse)
library(here)
library(readr)
library(janitor)
tbl_source_repo_raw_export_UK_comp_collecn10283_4857 <- clean_names() %>%
read_csv("metadata/source_repo_raw_export_UK_comp_collecn10283-4857.csv",
col_types = cols(`dc.contributor.other[en_UK]` = col_character(),
`dc.contributor[en]` = col_character(),
`dc.coverage.spatial[en]` = col_character(),
`dc.coverage.spatial[en_UK]` = col_character(),
`dc.description.abstract[en_UK]` = col_character(),
`dc.identifier.uri[]` = col_character(),
`dc.language.iso[]` = col_skip(),
`dc.language.iso[en_UK]` = col_skip(),
`dc.publisher[en_UK]` = col_character(),
`dc.relation.isreferencedby[en_UK]` = col_character(),
`dc.relation.isversionof[]` = col_character(),
`dc.relation.isversionof[en_UK]` = col_character(),
`dc.rights[]` = col_character(),
`dc.subject.classification[en_UK]` = col_character(),
`dc.subject[en_UK]` = col_character(),
`dc.title[en_UK]` = col_character(),
`dc.type[en_UK]` = col_character(),
`ds.not-emailable.item[en]` = col_skip()))
tbl_source_repo_raw_export_UK_comp_collecn10283_4857 <-  clean_names() %>%   read_csv("metadata/source_repo_raw_export_UK_comp_collecn10283-4857.csv",
col_types = cols(`dc.contributor.other[en_UK]` = col_character(),
`dc.contributor[en]` = col_character(),
`dc.coverage.spatial[en]` = col_character(),
`dc.coverage.spatial[en_UK]` = col_character(),
`dc.description.abstract[en_UK]` = col_character(),
`dc.identifier.uri[]` = col_character(),
`dc.language.iso[]` = col_skip(),
`dc.language.iso[en_UK]` = col_skip(),
`dc.publisher[en_UK]` = col_character(),
`dc.relation.isreferencedby[en_UK]` = col_character(),
`dc.relation.isversionof[]` = col_character(),
`dc.relation.isversionof[en_UK]` = col_character(),
`dc.rights[]` = col_character(),
`dc.subject.classification[en_UK]` = col_character(),
`dc.subject[en_UK]` = col_character(),
`dc.title[en_UK]` = col_character(),
`dc.type[en_UK]` = col_character(),
`ds.not-emailable.item[en]` = col_skip()))
tbl_source_repo_raw_export_UK_comp_collecn10283_4857 <-    read_csv("metadata/source_repo_raw_export_UK_comp_collecn10283-4857.csv",
col_types = cols(`dc.contributor.other[en_UK]` = col_character(),
`dc.contributor[en]` = col_character(),
`dc.coverage.spatial[en]` = col_character(),
`dc.coverage.spatial[en_UK]` = col_character(),
`dc.description.abstract[en_UK]` = col_character(),
`dc.identifier.uri[]` = col_character(),
`dc.language.iso[]` = col_skip(),
`dc.language.iso[en_UK]` = col_skip(),
`dc.publisher[en_UK]` = col_character(),
`dc.relation.isreferencedby[en_UK]` = col_character(),
`dc.relation.isversionof[]` = col_character(),
`dc.relation.isversionof[en_UK]` = col_character(),
`dc.rights[]` = col_character(),
`dc.subject.classification[en_UK]` = col_character(),
`dc.subject[en_UK]` = col_character(),
`dc.title[en_UK]` = col_character(),
`dc.type[en_UK]` = col_character(),
`ds.not-emailable.item[en]` = col_skip()))
tbl_cleaned_source_repo <- tbl_source_repo_raw_export_UK_comp_collecn10283_4857 %>% clean_names()
library(tidyverse)
library(here)
library(readr)
libra
library(janitor)
tbl_source_repo_raw_export_UK_comp_collecn10283_4857 <-    read_csv("metadata/source_repo_raw_export_UK_comp_collecn10283-4857.csv",
col_types = cols(`dc.contributor.other[en_UK]` = col_character(),
`dc.contributor[en]` = col_character(),
`dc.coverage.spatial[en]` = col_character(),
`dc.coverage.spatial[en_UK]` = col_character(),
`dc.description.abstract[en_UK]` = col_character(),
`dc.identifier.uri[]` = col_character(),
`dc.language.iso[]` = col_skip(),
`dc.language.iso[en_UK]` = col_skip(),
`dc.publisher[en_UK]` = col_character(),
`dc.relation.isreferencedby[en_UK]` = col_character(),
`dc.relation.isversionof[]` = col_character(),
`dc.relation.isversionof[en_UK]` = col_character(),
`dc.rights[]` = col_character(),
`dc.subject.classification[en_UK]` = col_character(),
`dc.subject[en_UK]` = col_character(),
`dc.title[en_UK]` = col_character(),
`dc.type[en_UK]` = col_character(),
`ds.not-emailable.item[en]` = col_skip())) %>% clean_names()
View(tbl_source_repo_raw_export_UK_comp_collecn10283_4857)
source("C:/coding/projects/metadata_prep_for_wikimedia/wikimedia_pattypan_metadata_prep.R")
is_tibble(tbl_source_repo_raw_export_UK_comp_collecn10283_4857)
source("C:/coding/projects/metadata_prep_for_wikimedia/wikimedia_pattypan_metadata_prep.R")
View(tbl_source_repo_raw_export_UK_comp_collecn10283_4857)
typeof(tbl_source_repo_raw_export_UK_comp_collecn10283_4857)
is_tibble(tbl_source_repo_raw_export_UK_comp_collecn10283_4857)
print("Imported source metadata is a tibble: ")
print(as.character(is_tibble(tbl_source_repo_raw_export_UK_comp_collecn10283_4857)))
source("C:/coding/projects/metadata_prep_for_wikimedia/wikimedia_pattypan_metadata_prep.R")
typeof(v1_2_PW_pattypan_2023_05_29_08_10_23)
print("Imported pattypan table is typeof: " + typeof(v1_2_PW_pattypan_2023_05_29_08_10_23))
print("Imported pattypan table is typeof: ", as.character(typeof(v1_2_PW_pattypan_2023_05_29_08_10_23)))
# Identify and then exclude the images already on wikimedia ie Aberdeen collection
tbl_source_repo_raw_export_UK_comp_collecn10283_4857 %>% filter(.data, grepl("3304", collection))
# Identify and then exclude the images already on wikimedia ie Aberdeen collection
filtered_tbl_source_repo_UK_comp_collecn <- filter(tbl_source_repo_raw_export_UK_comp_collecn10283_4857, grepl("3304", collection))
View(filtered_tbl_source_repo_UK_comp_collecn)
View(filtered_tbl_source_repo_UK_comp_collecn)
source("C:/coding/projects/metadata_prep_for_wikimedia/wikimedia_pattypan_metadata_prep.R")
typeof(tbl_v1_2_PW_pattypan_2023_05_29_08_10_23)
print(typeof(tbl_v1_2_PW_pattypan_2023_05_29_08_10_23))
source("C:/coding/projects/metadata_prep_for_wikimedia/wikimedia_pattypan_metadata_prep.R")
# Identify and then exclude the images already on wikimedia ie Aberdeen collection
filtered_tbl_source_repo_UK_comp_collecn <- tbl_source_repo_raw_export_UK_comp_collecn10283_4857[-grep("3304", collection,)]
# Identify and then exclude the images already on wikimedia ie Aberdeen collection
filtered_tbl_source_repo_UK_comp_collecn <- tbl_source_repo_raw_export_UK_comp_collecn10283_4857[-grep("3304", tbl_source_repo_raw_export_UK_comp_collecn10283_4857$collection,)]
# Identify and then exclude the images already on wikimedia ie Aberdeen collection
filtered_tbl_source_repo_UK_comp_collection <- tbl_source_repo_raw_export_UK_comp_collecn10283_4857 %>%
filter(! str_detect(collection, "3304"))
View(filtered_tbl_source_repo_UK_comp_collection)
View(filtered_tbl_source_repo_UK_comp_collection)
source("C:/coding/projects/metadata_prep_for_wikimedia/wikimedia_pattypan_metadata_prep.R")
View(tbl_v1_2_PW_pattypan_2023_05_29_08_10_23)
# Combine by join on the image filename
tbl_v1_2_PW_pattypan_2023_05_29_08_10_23$Source = ""
# Combine by join on the image filename
filtered_tbl_source_repo_UK_comp_collection %>% mutate(name = grepl('.*\/', path))
# Combine by join on the image filename
# Use basename from base R
# something like ... str_replace_all(basename(path), "")???
# filtered_tbl_source_repo_UK_comp_collection %>% mutate(name = str_sub('.*\\', path))
tbl_v1_2_PW_pattypan_2023_05_29_08_10_23 %>% mutate(name = str_replace_all(path, ".*\\", ""))
# Combine by join on the image filename
# Use basename from base R
# something like ... str_replace_all(basename(path), "")???
# filtered_tbl_source_repo_UK_comp_collection %>% mutate(name = str_sub('.*\\', path))
tbl_v1_2_PW_pattypan_2023_05_29_08_10_23 %>% mutate(name = str_remove(path, "^.*\\"))
# Combine by join on the image filename
# Use basename from base R
# something like ... str_replace_all(basename(path), "")???
# filtered_tbl_source_repo_UK_comp_collection %>% mutate(name = str_sub('.*\\', path))
# tbl_v1_2_PW_pattypan_2023_05_29_08_10_23 %>% mutate(name = str_remove(path, "^.*\\"))
tbl_v1_2_PW_pattypan_2023_05_29_08_10_23 %>% mutate(name = "something-dot-jpeg")
library(tidyverse)
library(here)
library(readr)
library(janitor)
library(readxl)
library(stringr)
# Read in metadata from source repo CSV
# df_datashare_metadata <- read_csv(here("metadata", "source_repo_raw_export_UK_comp_collecn10283-4857.csv"))
tbl_source_repo_raw_export_UK_comp_collecn10283_4857 <- read_csv("metadata/source_repo_raw_export_UK_comp_collecn10283-4857.csv",
col_types = cols(`dc.contributor.other[en_UK]` = col_character(),
`dc.contributor[en]` = col_character(),
`dc.coverage.spatial[en]` = col_character(),
`dc.coverage.spatial[en_UK]` = col_character(),
`dc.description.abstract[en_UK]` = col_character(),
`dc.identifier.uri[]` = col_character(),
`dc.language.iso[]` = col_skip(),
`dc.language.iso[en_UK]` = col_skip(),
`dc.publisher[en_UK]` = col_character(),
`dc.relation.isreferencedby[en_UK]` = col_character(),
`dc.relation.isversionof[]` = col_character(),
`dc.relation.isversionof[en_UK]` = col_character(),
`dc.rights[]` = col_character(),
`dc.subject.classification[en_UK]` = col_character(),
`dc.subject[en_UK]` = col_character(),
`dc.title[en_UK]` = col_character(),
`dc.type[]` = col_skip(), `dc.type[en_UK]` = col_skip(),
`ds.not-emailable.item[en]` = col_skip())) %>% clean_names()
print("Imported source metadata is a tibble: ")
print(as.character(is_tibble(tbl_source_repo_raw_export_UK_comp_collecn10283_4857)))
# Read in metadata from pattypan with readexcel()
tbl_v1_2_PW_pattypan_2023_05_29_08_10_23 <- read_excel("metadata/v1-2_PW_pattypan 2023-05-29 08_10_23.xls",
col_types = c("text", "text", "text",
"text", "text", "skip", "text", "skip",
"skip"))
print("Imported pattypan table is typeof: ")
print(typeof(tbl_v1_2_PW_pattypan_2023_05_29_08_10_23))
# Identify and then exclude the images already on wikimedia ie Aberdeen collection
filtered_tbl_source_repo_UK_comp_collection <- tbl_source_repo_raw_export_UK_comp_collecn10283_4857 %>%
filter(! str_detect(collection, "3304"))
# Combine by join on the image filename
# Use basename from base R
# something like ... str_replace_all(basename(path), "")???
# filtered_tbl_source_repo_UK_comp_collection %>% mutate(name = str_sub('.*\\', path))
# tbl_v1_2_PW_pattypan_2023_05_29_08_10_23 %>% mutate(name = str_remove(path, "^.*\\"))
tbl_v1_2_PW_pattypan_2023_05_29_08_10_23 %>% mutate(name = "something-dot-jpeg")
# Combine metadata from source repo and pattypan,
# in preparation for upload of photo collection to Wikimedia Commons
library(tidyverse)
library(here)
library(readr)
library(janitor)
library(readxl)
library(stringr)
# Read in metadata from source repo CSV
# df_datashare_metadata <- read_csv(here("metadata", "source_repo_raw_export_UK_comp_collecn10283-4857.csv"))
tbl_source_repo_raw_export_UK_comp_collecn10283_4857 <- read_csv("metadata/source_repo_raw_export_UK_comp_collecn10283-4857.csv",
col_types = cols(`dc.contributor.other[en_UK]` = col_character(),
`dc.contributor[en]` = col_character(),
`dc.coverage.spatial[en]` = col_character(),
`dc.coverage.spatial[en_UK]` = col_character(),
`dc.description.abstract[en_UK]` = col_character(),
`dc.identifier.uri[]` = col_character(),
`dc.language.iso[]` = col_skip(),
`dc.language.iso[en_UK]` = col_skip(),
`dc.publisher[en_UK]` = col_character(),
`dc.relation.isreferencedby[en_UK]` = col_character(),
`dc.relation.isversionof[]` = col_character(),
`dc.relation.isversionof[en_UK]` = col_character(),
`dc.rights[]` = col_character(),
`dc.subject.classification[en_UK]` = col_character(),
`dc.subject[en_UK]` = col_character(),
`dc.title[en_UK]` = col_character(),
`dc.type[]` = col_skip(), `dc.type[en_UK]` = col_skip(),
`ds.not-emailable.item[en]` = col_skip())) %>% clean_names()
print("Imported source metadata is a tibble: ")
print(as.character(is_tibble(tbl_source_repo_raw_export_UK_comp_collecn10283_4857)))
# Read in metadata from pattypan with readexcel()
tbl_v1_2_PW_pattypan_2023_05_29_08_10_23 <- read_excel("metadata/v1-2_PW_pattypan 2023-05-29 08_10_23.xls",
col_types = c("text", "text", "text",
"text", "text", "skip", "text", "skip",
"skip"))
print("Imported pattypan table is typeof: ")
print(typeof(tbl_v1_2_PW_pattypan_2023_05_29_08_10_23))
# Identify and then exclude the images already on wikimedia ie Aberdeen collection
filtered_tbl_source_repo_UK_comp_collection <- tbl_source_repo_raw_export_UK_comp_collecn10283_4857 %>%
filter(! str_detect(collection, "3304"))
# Combine by join on the image filename
# Use basename from base R
# something like ... str_replace_all(basename(path), "")???
# filtered_tbl_source_repo_UK_comp_collection %>% mutate(name = str_sub('.*\\', path))
# tbl_v1_2_PW_pattypan_2023_05_29_08_10_23 %>% mutate(name = str_remove(path, "^.*\\"))
tbl_v1_2_PW_pattypan_2023_05_29_08_10_23 %>% mutate(name = path)
# Combine by join on the image filename
# Use basename from base R
# something like ... str_replace_all(basename(path), "")???
# filtered_tbl_source_repo_UK_comp_collection %>% mutate(name = str_sub('.*\\', path))
# tbl_v1_2_PW_pattypan_2023_05_29_08_10_23 %>% mutate(name = str_remove(path, "^.*\\"))
tbl_v1_2_PW_pattypan_2023_05_29_08_10_23 %>% mutate(name = str_remove_all("\\", path))
# Combine by join on the image filename
# Use basename from base R
# something like ... str_replace_all(basename(path), "")???
# filtered_tbl_source_repo_UK_comp_collection %>% mutate(name = str_sub('.*\\', path))
# tbl_v1_2_PW_pattypan_2023_05_29_08_10_23 %>% mutate(name = str_remove(path, "^.*\\"))
tbl_v1_2_PW_pattypan_2023_05_29_08_10_23 %>% mutate(name = str_remove_all("^E:.\\\\", path))
# Combine by join on the image filename
# Use basename from base R
# something like ... str_replace_all(basename(path), "")???
# filtered_tbl_source_repo_UK_comp_collection %>% mutate(name = str_sub('.*\\', path))
# tbl_v1_2_PW_pattypan_2023_05_29_08_10_23 %>% mutate(name = str_remove(path, "^.*\\"))
tbl_v1_2_PW_pattypan_2023_05_29_08_10_23 %>% mutate(name = str_remove_all("^E:.*\\\\", path))
# Combine by join on the image filename
# Use basename from base R
# something like ... str_replace_all(basename(path), "")???
# filtered_tbl_source_repo_UK_comp_collection %>% mutate(name = str_sub('.*\\', path))
# tbl_v1_2_PW_pattypan_2023_05_29_08_10_23 %>% mutate(name = str_remove(path, "^.*\\"))
tbl_v1_2_PW_pattypan_2023_05_29_08_10_23 %>% mutate(name = str_remove_all("^E:.*\\*", path))
# Combine by join on the image filename
# Use basename from base R
# something like ... str_replace_all(basename(path), "")???
# filtered_tbl_source_repo_UK_comp_collection %>% mutate(name = str_sub('.*\\', path))
# tbl_v1_2_PW_pattypan_2023_05_29_08_10_23 %>% mutate(name = str_remove(path, "^.*\\"))
tbl_v1_2_PW_pattypan_2023_05_29_08_10_23 %>% mutate(name = str_remove_all(basename(path), path))
library(tools)
# Combine by join on the image filename
# Use basename from base R
# something like ... str_replace_all(basename(path), "")???
# filtered_tbl_source_repo_UK_comp_collection %>% mutate(name = str_sub('.*\\', path))
# tbl_v1_2_PW_pattypan_2023_05_29_08_10_23 %>% mutate(name = str_remove(path, "^.*\\"))
tbl_v1_2_PW_pattypan_2023_05_29_08_10_23 %>% mutate(name = str_remove_all(basename(path), path))
# Combine by join on the image filename
# Use basename from base R
# something like ... str_replace_all(basename(path), "")???
# filtered_tbl_source_repo_UK_comp_collection %>% mutate(name = str_sub('.*\\', path))
# tbl_v1_2_PW_pattypan_2023_05_29_08_10_23 %>% mutate(name = str_remove(path, "^.*\\"))
tbl_v1_2_PW_pattypan_2023_05_29_08_10_23 %>% mutate(name = basename(path))
source("C:/coding/projects/metadata_prep_for_wikimedia/wikimedia_pattypan_metadata_prep.R")
View(tbl_v1_2_PW_pattypan_2023_05_29_08_10_23)
source("C:/coding/projects/metadata_prep_for_wikimedia/wikimedia_pattypan_metadata_prep.R")
View(tbl_v1_2_PW_pattypan_2023_05_29_08_10_23)
View(tbl_v1_2_PW_pattypan_2023_05_29_08_10_23)
# Combine by join on the image filename
# Use basename from base R
tbl_v1_2_PW_pattypan_2023_05_29_08_10_23 %>% mutate(name = path)
# Combine by join on the image filename
# Use basename from base R
tbl_v1_2_PW_pattypan_2023_05_29_08_10_23 %>% mutate(name = basename(path))
View(tbl_v1_2_PW_pattypan_2023_05_29_08_10_23)
View(tbl_v1_2_PW_pattypan_2023_05_29_08_10_23)
# Combine by join on the image filename
# Use basename from base R
tbl_v1_2_PW_pattypan_2023_05_29_08_10_23 <- tbl_v1_2_PW_pattypan_2023_05_29_08_10_23 %>% mutate(name = basename(path))
View(tbl_v1_2_PW_pattypan_2023_05_29_08_10_23)
source("C:/coding/projects/metadata_prep_for_wikimedia/wikimedia_pattypan_metadata_prep.R")
source("C:/coding/projects/metadata_prep_for_wikimedia/wikimedia_pattypan_metadata_prep.R")
source("C:/coding/projects/metadata_prep_for_wikimedia/wikimedia_pattypan_metadata_prep.R")
