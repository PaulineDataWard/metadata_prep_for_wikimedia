`dc.relation.isversionof[]` = col_skip(),
`dc.relation.isversionof[en_UK]` = col_skip(),
`dc.rights[]` = col_skip(), `dc.rights[en]` = col_skip(),
`dc.subject.classification[]` = col_skip(),
`dc.subject.classification[en_UK]` = col_skip(),
`dc.subject[]` = col_skip(), `dc.subject[en_UK]` = col_skip()))
# Read in metadata from pattypan
tbl_pattypan_intermediate_processed_fileset_UK_Tower_Block <- read_xls("metadata/pattypan_intermediate_processed_fileset_UK_Tower_Block.xls",
col_types = c("text", "text", "text",
"text", "text", "text", "text"))
print("Imported pattypan table is typeof: ")
print(typeof(tbl_pattypan_intermediate_processed_fileset_UK_Tower_Block))
# Identify and then exclude the images already on wikimedia ie Aberdeen collection
filtered_tbl_source <- tbl_source_repo_raw_export_UK_comp_collecn10283_4857 %>%
filter(! str_detect(collection, "3304"))
# Prep the columns in order to combine by join on the image filename
# Use basename from base R to extract filename from path
new_pattypan_metadata <- tbl_pattypan_intermediate_processed_fileset_UK_Tower_Block %>% mutate(img_filename = basename(path))
# Use stringr to extract filename from title
# No longer need to avoid changing upper case to lower case, as we're using the intermediate fileset '/processed', already lower case.
filtered_tbl_source$img_filename <- ""
filtered_tbl_source <- filtered_tbl_source %>% mutate(img_filename = str_replace_all(dc_title, "^.*, ", ""))
library(tidyverse)
library(here)
library(readr)
library(janitor)
library(readxl)
library(stringr)
library(tools)
tbl_source_repo_raw_export_UK_comp_collecn10283_4857 <- read_csv("metadata/source_repo_raw_export_UK_comp_collecn10283-4857.csv",
col_types = cols(`dc.contributor[en]` = col_character(),
`dc.description.abstract[en_UK]` = col_character(),
`dc.publisher[en_UK]` = col_skip(),
`dc.relation.isreferencedby[]` = col_skip(),
`dc.relation.isreferencedby[en_UK]` = col_skip(),
`dc.relation.isversionof[]` = col_skip(),
`dc.relation.isversionof[en_UK]` = col_skip(),
`dc.rights[]` = col_skip(), `dc.rights[en]` = col_skip(),
`dc.subject.classification[]` = col_skip(),
`dc.subject.classification[en_UK]` = col_skip(),
`dc.subject[]` = col_skip(), `dc.subject[en_UK]` = col_skip())) %>% clean_names()
# Read in metadata from pattypan
tbl_pattypan_intermediate_processed_fileset_UK_Tower_Block <- read_xls("metadata/pattypan_intermediate_processed_fileset_UK_Tower_Block.xls",
col_types = c("text", "text", "text",
"text", "text", "text", "text"))
print("Imported pattypan table is typeof: ")
print(typeof(tbl_pattypan_intermediate_processed_fileset_UK_Tower_Block))
# Identify and then exclude the images already on wikimedia ie Aberdeen collection
filtered_tbl_source <- tbl_source_repo_raw_export_UK_comp_collecn10283_4857 %>%
filter(! str_detect(collection, "3304"))
new_pattypan_metadata <- tbl_pattypan_intermediate_processed_fileset_UK_Tower_Block %>% mutate(img_filename = basename(path))
# Use stringr to extract filename from title
# No longer need to avoid changing upper case to lower case, as we're using the intermediate fileset '/processed', already lower case.
filtered_tbl_source$img_filename <- ""
filtered_tbl_source <- filtered_tbl_source %>% mutate(img_filename = str_replace_all(dc_title, "^.*, ", ""))
filtered_tbl_source <- filtered_tbl_source %>% mutate(year = str_sub(dc_coverage_temporal, start = 7, end = 10))
# jettison columns no longer needed in filtered_tb_source
filtered_tbl_source <- select(filtered_tbl_source,-dc_contributor,-dc_contributor_other)
new_pattypan_metadata <-  new_pattypan_metadata %>%
left_join(filtered_tbl_source, by = "img_filename")
library(tidyverse)
library(here)
library(readr)
library(janitor)
library(readxl)
library(stringr)
library(tools)
tbl_source_repo_raw_export_UK_comp_collecn10283_4857 <- read_csv("metadata/source_repo_raw_export_UK_comp_collecn10283-4857.csv",
col_types = cols(`dc.contributor[en]` = col_character(),
`dc.description.abstract[en_UK]` = col_character(),
`dc.publisher[en_UK]` = col_skip(),
`dc.relation.isreferencedby[]` = col_skip(),
`dc.relation.isreferencedby[en_UK]` = col_skip(),
`dc.relation.isversionof[]` = col_skip(),
`dc.relation.isversionof[en_UK]` = col_skip(),
`dc.rights[]` = col_skip(), `dc.rights[en]` = col_skip(),
`dc.subject.classification[]` = col_skip(),
`dc.subject.classification[en_UK]` = col_skip(),
`dc.subject[]` = col_skip(), `dc.subject[en_UK]` = col_skip())) %>% clean_names()
tbl_pattypan_intermediate_processed_fileset_UK_Tower_Block <- read_xls("metadata/pattypan_intermediate_processed_fileset_UK_Tower_Block.xls",
col_types = c("text", "text", "text",
"text", "text", "text", "text"))
filtered_tbl_source <- tbl_source_repo_raw_export_UK_comp_collecn10283_4857 %>%
filter(! str_detect(collection, "3304"))
new_pattypan_metadata <- tbl_pattypan_intermediate_processed_fileset_UK_Tower_Block %>% mutate(img_filename = basename(path))
filtered_tbl_source$img_filename <- ""
filtered_tbl_source <- filtered_tbl_source %>% mutate(img_filename = str_replace_all(dc_title, "^.*, ", ""))
filtered_tbl_source <- filtered_tbl_source %>% mutate(year = str_sub(dc_coverage_temporal, start = 7, end = 10))
filtered_tbl_source <- filtered_tbl_source %>% mutate(year = str_sub(dc_coverage_temporal, start = 7, end = 10))
# jettison columns no longer needed in filtered_tb_source
filtered_tbl_source <- select(filtered_tbl_source,-dc_contributor,-dc_contributor_other)
new_pattypan_metadata <-  new_pattypan_metadata %>%
left_join(filtered_tbl_source, by = "img_filename")
# Replace value in column 'source' with the DataShare DOI, either identifier_uri or identifier_uri_2
new_pattypan_metadata$source <- ""
new_pattypan_metadata <- str_match(filtered_tbl_source$dc_identifier_uri, "^https://doi.org/ds/7488/\d\d\d\d$")
new_pattypan_metadata <- str_match(filtered_tbl_source$dc_identifier_uri, "^https://doi.org/ds/7488/[0-9]{4}$", )
new_pattypan_metadata <- str_match(filtered_tbl_source$dc_identifier_uri, "^https://doi.org/ds/7488/[0-9]{4}$")
View(new_pattypan_metadata)
library(tidyverse)
library(here)
library(readr)
library(janitor)
library(readxl)
library(stringr)
library(tools)
# Read in metadata from source repo CSV,
# after manual cleaning of CSV in Excel to remove unused columns
tbl_source_repo_raw_export_UK_comp_collecn10283_4857 <- read_csv("metadata/source_repo_raw_export_UK_comp_collecn10283-4857.csv",
col_types = cols(`dc.contributor[en]` = col_character(),
`dc.description.abstract[en_UK]` = col_character(),
`dc.publisher[en_UK]` = col_skip(),
`dc.relation.isreferencedby[]` = col_skip(),
`dc.relation.isreferencedby[en_UK]` = col_skip(),
`dc.relation.isversionof[]` = col_skip(),
`dc.relation.isversionof[en_UK]` = col_skip(),
`dc.rights[]` = col_skip(), `dc.rights[en]` = col_skip(),
`dc.subject.classification[]` = col_skip(),
`dc.subject.classification[en_UK]` = col_skip(),
`dc.subject[]` = col_skip(), `dc.subject[en_UK]` = col_skip())) %>% clean_names()
# print("Imported source metadata is a tibble: ")
# print(as.character(is_tibble(tbl_source_repo_raw_export_UK_comp_collecn10283_4857)))
# print("distinct uri values:")
# print(distinct(tbl_source_repo_raw_export_UK_comp_collecn10283_4857, dc_identifier_uri))
# print("distinct uri2 values:")
# print(distinct(tbl_source_repo_raw_export_UK_comp_collecn10283_4857, dc_identifier_uri_2))
# Read in metadata from pattypan
tbl_pattypan_intermediate_processed_fileset_UK_Tower_Block <- read_xls("metadata/pattypan_intermediate_processed_fileset_UK_Tower_Block.xls",
col_types = c("text", "text", "text",
"text", "text", "text", "text"))
print("Imported pattypan table is typeof: ")
print(typeof(tbl_pattypan_intermediate_processed_fileset_UK_Tower_Block))
# Identify and then exclude the images already on wikimedia ie Aberdeen collection
filtered_tbl_source <- tbl_source_repo_raw_export_UK_comp_collecn10283_4857 %>%
filter(! str_detect(collection, "3304"))
# Prep the columns in order to combine by join on the image filename
# Use basename from base R to extract filename from path
new_pattypan_metadata <- tbl_pattypan_intermediate_processed_fileset_UK_Tower_Block %>% mutate(img_filename = basename(path))
# Use stringr to extract filename from title
# No longer need to avoid changing upper case to lower case, as we're using the intermediate fileset '/processed', already lower case.
filtered_tbl_source$img_filename <- ""
filtered_tbl_source <- filtered_tbl_source %>% mutate(img_filename = str_replace_all(dc_title, "^.*, ", ""))
filtered_tbl_source <- filtered_tbl_source %>% mutate(year = str_sub(dc_coverage_temporal, start = 7, end = 10))
# jettison columns no longer needed in filtered_tb_source
filtered_tbl_source <- select(filtered_tbl_source,-dc_contributor,-dc_contributor_other)
# Left join on common column ie img_filename - adds all columns
new_pattypan_metadata <-  new_pattypan_metadata %>%
left_join(filtered_tbl_source, by = "img_filename")
# Drop pattypan name, since join has already been carried out
# Replace value in column 'source' with the DataShare DOI, either identifier_uri or identifier_uri_2
new_pattypan_metadata$source <- ""
new_pattypan_metadata$source <- str_match(filtered_tbl_source$dc_identifier_uri, "^https://doi.org/ds/7488/[0-9]{4}$")
View(new_pattypan_metadata)
View(new_pattypan_metadata)
View(filtered_tbl_source)
View(filtered_tbl_source)
# OUtput to a new file, for pasting into the xls
write_delim(new_pattypan_metadata, here("metadata", "new_pattypan_cols.csv"), delim = ",")
# try to fix the jpg png mismatch
filtered_tbl_source <- filtered_tbl_source %>% mutate(img_filename = str_replace(img_filename, "\.[png|jpg]$", ""))
# try to fix the jpg png mismatch
filtered_tbl_source <- filtered_tbl_source %>% mutate(img_filename = str_replace(img_filename, '\.[png|jpg]$', ""))
# try to fix the jpg png mismatch
filtered_tbl_source <- filtered_tbl_source %>% mutate(img_filename = str_replace(img_filename, ".[png|jpg]$", ""))
View(filtered_tbl_source)
View(filtered_tbl_source)
library(tidyverse)
library(here)
library(readr)
library(janitor)
library(readxl)
library(stringr)
library(tools)
# Read in metadata from source repo CSV,
# after manual cleaning of CSV in Excel to remove unused columns
tbl_source_repo_raw_export_UK_comp_collecn10283_4857 <- read_csv("metadata/source_repo_raw_export_UK_comp_collecn10283-4857.csv",
col_types = cols(`dc.contributor[en]` = col_character(),
`dc.description.abstract[en_UK]` = col_character(),
`dc.publisher[en_UK]` = col_skip(),
`dc.relation.isreferencedby[]` = col_skip(),
`dc.relation.isreferencedby[en_UK]` = col_skip(),
`dc.relation.isversionof[]` = col_skip(),
`dc.relation.isversionof[en_UK]` = col_skip(),
`dc.rights[]` = col_skip(), `dc.rights[en]` = col_skip(),
`dc.subject.classification[]` = col_skip(),
`dc.subject.classification[en_UK]` = col_skip(),
`dc.subject[]` = col_skip(), `dc.subject[en_UK]` = col_skip())) %>% clean_names()
# print("Imported source metadata is a tibble: ")
# print(as.character(is_tibble(tbl_source_repo_raw_export_UK_comp_collecn10283_4857)))
# print("distinct uri values:")
# print(distinct(tbl_source_repo_raw_export_UK_comp_collecn10283_4857, dc_identifier_uri))
# print("distinct uri2 values:")
# print(distinct(tbl_source_repo_raw_export_UK_comp_collecn10283_4857, dc_identifier_uri_2))
# Read in metadata from pattypan
tbl_pattypan_intermediate_processed_fileset_UK_Tower_Block <- read_xls("metadata/pattypan_intermediate_processed_fileset_UK_Tower_Block.xls",
col_types = c("text", "text", "text",
"text", "text", "text", "text"))
print("Imported pattypan table is typeof: ")
print(typeof(tbl_pattypan_intermediate_processed_fileset_UK_Tower_Block))
# Identify and then exclude the images already on wikimedia ie Aberdeen collection
filtered_tbl_source <- tbl_source_repo_raw_export_UK_comp_collecn10283_4857 %>%
filter(! str_detect(collection, "3304"))
# Prep the columns in order to combine by join on the image filename
# Use basename from base R to extract filename from path
new_pattypan_metadata <- tbl_pattypan_intermediate_processed_fileset_UK_Tower_Block %>% mutate(img_filename = basename(path))
# Use stringr to extract filename from title
# Workaround - many entries say jpg in title, when in fact files are .png
# No longer need to avoid changing upper case to lower case, as we're using the intermediate fileset '/processed', already lower case.
filtered_tbl_source$img_filename <- ""
filtered_tbl_source <- filtered_tbl_source %>% mutate(img_filename = str_replace_all(dc_title, "^.*, ", ""))
#
# try to fix the jpg png mismatch
filtered_tbl_source <- filtered_tbl_source %>% mutate(img_filename = str_replace(img_filename, ".jpg$", ""))
View(filtered_tbl_source)
View(filtered_tbl_source)
filtered_tbl_source <- filtered_tbl_source %>% mutate(year = str_sub(dc_coverage_temporal, start = 7, end = 10))
library(tidyverse)
library(here)
library(readr)
library(janitor)
library(readxl)
library(stringr)
library(tools)
# Read in metadata from source repo CSV,
# after manual cleaning of CSV in Excel to remove unused columns
tbl_source_repo_raw_export_UK_comp_collecn10283_4857 <- read_csv("metadata/source_repo_raw_export_UK_comp_collecn10283-4857.csv",
col_types = cols(`dc.contributor[en]` = col_character(),
`dc.description.abstract[en_UK]` = col_character(),
`dc.publisher[en_UK]` = col_skip(),
`dc.relation.isreferencedby[]` = col_skip(),
`dc.relation.isreferencedby[en_UK]` = col_skip(),
`dc.relation.isversionof[]` = col_skip(),
`dc.relation.isversionof[en_UK]` = col_skip(),
`dc.rights[]` = col_skip(), `dc.rights[en]` = col_skip(),
`dc.subject.classification[]` = col_skip(),
`dc.subject.classification[en_UK]` = col_skip(),
`dc.subject[]` = col_skip(), `dc.subject[en_UK]` = col_skip())) %>% clean_names()
# print("Imported source metadata is a tibble: ")
# print(as.character(is_tibble(tbl_source_repo_raw_export_UK_comp_collecn10283_4857)))
# print("distinct uri values:")
# print(distinct(tbl_source_repo_raw_export_UK_comp_collecn10283_4857, dc_identifier_uri))
# print("distinct uri2 values:")
# print(distinct(tbl_source_repo_raw_export_UK_comp_collecn10283_4857, dc_identifier_uri_2))
# Read in metadata from pattypan
tbl_pattypan_intermediate_processed_fileset_UK_Tower_Block <- read_xls("metadata/pattypan_intermediate_processed_fileset_UK_Tower_Block.xls",
col_types = c("text", "text", "text",
"text", "text", "text", "text"))
print("Imported pattypan table is typeof: ")
print(typeof(tbl_pattypan_intermediate_processed_fileset_UK_Tower_Block))
# Identify and then exclude the images already on wikimedia ie Aberdeen collection
filtered_tbl_source <- tbl_source_repo_raw_export_UK_comp_collecn10283_4857 %>%
filter(! str_detect(collection, "3304"))
# Prep the columns in order to combine by join on the image filename
# Use basename from base R to extract filename from path
new_pattypan_metadata <- tbl_pattypan_intermediate_processed_fileset_UK_Tower_Block %>% mutate(img_filename = basename(path))
# Use stringr to extract filename from title
# Workaround - many entries say jpg in title, when in fact files are .png
# No longer need to avoid changing upper case to lower case, as we're using the intermediate fileset '/processed', already lower case.
filtered_tbl_source$img_filename <- ""
filtered_tbl_source <- filtered_tbl_source %>% mutate(img_filename = str_replace_all(dc_title, "^.*, ", ""))
filtered_tbl_source <- filtered_tbl_source %>% mutate(year = str_sub(dc_coverage_temporal, start = 7, end = 10))
# try to fix the jpg png mismatch
#filtered_tbl_source <- filtered_tbl_source %>% mutate(img_filename = str_replace(img_filename, ".jpg$", ""))
new_pattypan_metadata <- new_pattypan_metadata %>% mutate(img_filename = str_replace(img_filename, ".png", ".jpg"))
# jettison columns no longer needed in filtered_tb_source
filtered_tbl_source <- select(filtered_tbl_source,-dc_contributor,-dc_contributor_other)
new_pattypan_metadata <-  new_pattypan_metadata %>%
left_join(filtered_tbl_source, by = "img_filename")
# Replace value in column 'source' with the DataShare DOI, either identifier_uri or identifier_uri_2
new_pattypan_metadata$source <- ""
new_pattypan_metadata$source <- str_match(filtered_tbl_source$dc_identifier_uri, "^https://doi.org/ds/7488/[0-9]{4}$")
View(new_pattypan_metadata)
View(new_pattypan_metadata)
library(tidyverse)
library(here)
library(readr)
library(janitor)
library(readxl)
library(stringr)
library(tools)
# Read in metadata from source repo CSV,
# after manual cleaning of CSV in Excel to remove unused columns
tbl_source_repo_raw_export_UK_comp_collecn10283_4857 <- read_csv("metadata/source_repo_raw_export_UK_comp_collecn10283-4857.csv",
col_types = cols(`dc.contributor[en]` = col_character(),
`dc.description.abstract[en_UK]` = col_character(),
`dc.publisher[en_UK]` = col_skip(),
`dc.relation.isreferencedby[]` = col_skip(),
`dc.relation.isreferencedby[en_UK]` = col_skip(),
`dc.relation.isversionof[]` = col_skip(),
`dc.relation.isversionof[en_UK]` = col_skip(),
`dc.rights[]` = col_skip(), `dc.rights[en]` = col_skip(),
`dc.subject.classification[]` = col_skip(),
`dc.subject.classification[en_UK]` = col_skip(),
`dc.subject[]` = col_skip(), `dc.subject[en_UK]` = col_skip())) %>% clean_names()
# print("Imported source metadata is a tibble: ")
# print(as.character(is_tibble(tbl_source_repo_raw_export_UK_comp_collecn10283_4857)))
# print("distinct uri values:")
# print(distinct(tbl_source_repo_raw_export_UK_comp_collecn10283_4857, dc_identifier_uri))
# print("distinct uri2 values:")
# print(distinct(tbl_source_repo_raw_export_UK_comp_collecn10283_4857, dc_identifier_uri_2))
# Read in metadata from pattypan
tbl_pattypan_intermediate_processed_fileset_UK_Tower_Block <- read_xls("metadata/pattypan_intermediate_processed_fileset_UK_Tower_Block.xls",
col_types = c("text", "text", "text",
"text", "text", "text", "text"))
print("Imported pattypan table is typeof: ")
print(typeof(tbl_pattypan_intermediate_processed_fileset_UK_Tower_Block))
# Identify and then exclude the images already on wikimedia ie Aberdeen collection
filtered_tbl_source <- tbl_source_repo_raw_export_UK_comp_collecn10283_4857 %>%
filter(! str_detect(collection, "3304"))
# Prep the columns in order to combine by join on the image filename
# Use basename from base R to extract filename from path
new_pattypan_metadata <- tbl_pattypan_intermediate_processed_fileset_UK_Tower_Block %>% mutate(img_filename = basename(path))
# Use stringr to extract filename from title
# Workaround - many entries say jpg in title, when in fact files are .png
# No longer need to avoid changing upper case to lower case, as we're using the intermediate fileset '/processed', already lower case.
filtered_tbl_source$img_filename <- ""
filtered_tbl_source <- filtered_tbl_source %>% mutate(img_filename = str_replace_all(dc_title, "^.*, ", ""))
filtered_tbl_source <- filtered_tbl_source %>% mutate(year = str_sub(dc_coverage_temporal, start = 7, end = 10))
# try to fix the jpg png mismatch by storing in a new variable image_id on which to join
filtered_tbl_source$image_id <- ""
filtered_tbl_source <- filtered_tbl_source %>% mutate(image_id = str_replace(img_filename, ".jpg$", ""))
new_pattypan_metadata$image_id <- ""
new_pattypan_metadata <- new_pattypan_metadata %>% mutate(image_id = str_replace(img_filename, ".png$", ".jpg"))
# jettison columns no longer needed in filtered_tb_source
filtered_tbl_source <- select(filtered_tbl_source,-dc_contributor,-dc_contributor_other)
new_pattypan_metadata <-  new_pattypan_metadata %>%
left_join(filtered_tbl_source, by = "image_id")
View(new_pattypan_metadata)
View(new_pattypan_metadata)
View(filtered_tbl_source)
View(filtered_tbl_source)
library(tidyverse)
library(here)
library(readr)
library(janitor)
library(readxl)
library(stringr)
library(tools)
# Read in metadata from source repo CSV,
# after manual cleaning of CSV in Excel to remove unused columns
tbl_source_repo_raw_export_UK_comp_collecn10283_4857 <- read_csv("metadata/source_repo_raw_export_UK_comp_collecn10283-4857.csv",
col_types = cols(`dc.contributor[en]` = col_character(),
`dc.description.abstract[en_UK]` = col_character(),
`dc.publisher[en_UK]` = col_skip(),
`dc.relation.isreferencedby[]` = col_skip(),
`dc.relation.isreferencedby[en_UK]` = col_skip(),
`dc.relation.isversionof[]` = col_skip(),
`dc.relation.isversionof[en_UK]` = col_skip(),
`dc.rights[]` = col_skip(), `dc.rights[en]` = col_skip(),
`dc.subject.classification[]` = col_skip(),
`dc.subject.classification[en_UK]` = col_skip(),
`dc.subject[]` = col_skip(), `dc.subject[en_UK]` = col_skip())) %>% clean_names()
# print("Imported source metadata is a tibble: ")
# print(as.character(is_tibble(tbl_source_repo_raw_export_UK_comp_collecn10283_4857)))
# print("distinct uri values:")
# print(distinct(tbl_source_repo_raw_export_UK_comp_collecn10283_4857, dc_identifier_uri))
# print("distinct uri2 values:")
# print(distinct(tbl_source_repo_raw_export_UK_comp_collecn10283_4857, dc_identifier_uri_2))
# Read in metadata from pattypan
tbl_pattypan_intermediate_processed_fileset_UK_Tower_Block <- read_xls("metadata/pattypan_intermediate_processed_fileset_UK_Tower_Block.xls",
col_types = c("text", "text", "text",
"text", "text", "text", "text"))
print("Imported pattypan table is typeof: ")
print(typeof(tbl_pattypan_intermediate_processed_fileset_UK_Tower_Block))
# Identify and then exclude the images already on wikimedia ie Aberdeen collection
filtered_tbl_source <- tbl_source_repo_raw_export_UK_comp_collecn10283_4857 %>%
filter(! str_detect(collection, "3304"))
# Prep the columns in order to combine by join on the image filename
# Use basename from base R to extract filename from path
new_pattypan_metadata <- tbl_pattypan_intermediate_processed_fileset_UK_Tower_Block %>% mutate(img_filename = basename(path))
# Use stringr to extract filename from title
# Workaround - many entries say jpg in title, when in fact files are .png
# No longer need to avoid changing upper case to lower case, as we're using the intermediate fileset '/processed', already lower case.
filtered_tbl_source$img_filename <- ""
filtered_tbl_source <- filtered_tbl_source %>% mutate(img_filename = str_replace_all(dc_title, "^.*, ", ""))
filtered_tbl_source <- filtered_tbl_source %>% mutate(year = str_sub(dc_coverage_temporal, start = 7, end = 10))
# try to fix the jpg png mismatch by storing in a new variable image_id on which to join
filtered_tbl_source$image_id <- ""
filtered_tbl_source <- filtered_tbl_source %>% mutate(image_id = str_replace(img_filename, ".jpg$", ""))
new_pattypan_metadata$image_id <- ""
new_pattypan_metadata <- new_pattypan_metadata %>% mutate(image_id = str_replace(img_filename, ".png$", ""))
new_pattypan_metadata <- new_pattypan_metadata %>% mutate(image_id = str_replace(img_filename, ".jpg$", ""))
View(new_pattypan_metadata)
View(new_pattypan_metadata)
# jettison columns no longer needed in filtered_tb_source
filtered_tbl_source <- select(filtered_tbl_source,-dc_contributor,-dc_contributor_other)
new_pattypan_metadata <-  new_pattypan_metadata %>%
left_join(filtered_tbl_source, by = "image_id")
View(new_pattypan_metadata)
View(new_pattypan_metadata)
library(tidyverse)
library(here)
library(readr)
library(janitor)
library(readxl)
library(stringr)
library(tools)
# Read in metadata from source repo CSV,
# after manual cleaning of CSV in Excel to remove unused columns
tbl_source_repo_raw_export_UK_comp_collecn10283_4857 <- read_csv("metadata/source_repo_raw_export_UK_comp_collecn10283-4857.csv",
col_types = cols(`dc.contributor[en]` = col_character(),
`dc.description.abstract[en_UK]` = col_character(),
`dc.publisher[en_UK]` = col_skip(),
`dc.relation.isreferencedby[]` = col_skip(),
`dc.relation.isreferencedby[en_UK]` = col_skip(),
`dc.relation.isversionof[]` = col_skip(),
`dc.relation.isversionof[en_UK]` = col_skip(),
`dc.rights[]` = col_skip(), `dc.rights[en]` = col_skip(),
`dc.subject.classification[]` = col_skip(),
`dc.subject.classification[en_UK]` = col_skip(),
`dc.subject[]` = col_skip(), `dc.subject[en_UK]` = col_skip())) %>% clean_names()
# print("Imported source metadata is a tibble: ")
# print(as.character(is_tibble(tbl_source_repo_raw_export_UK_comp_collecn10283_4857)))
# print("distinct uri values:")
# print(distinct(tbl_source_repo_raw_export_UK_comp_collecn10283_4857, dc_identifier_uri))
# print("distinct uri2 values:")
# print(distinct(tbl_source_repo_raw_export_UK_comp_collecn10283_4857, dc_identifier_uri_2))
# Read in metadata from pattypan
tbl_pattypan_intermediate_processed_fileset_UK_Tower_Block <- read_xls("metadata/pattypan_intermediate_processed_fileset_UK_Tower_Block.xls",
col_types = c("text", "text", "text",
"text", "text", "text", "text"))
print("Imported pattypan table is typeof: ")
print(typeof(tbl_pattypan_intermediate_processed_fileset_UK_Tower_Block))
# Identify and then exclude the images already on wikimedia ie Aberdeen collection
filtered_tbl_source <- tbl_source_repo_raw_export_UK_comp_collecn10283_4857 %>%
filter(! str_detect(collection, "3304"))
# Prep the columns in order to combine by join on the image filename
# Use basename from base R to extract filename from path
new_pattypan_metadata <- tbl_pattypan_intermediate_processed_fileset_UK_Tower_Block %>% mutate(img_filename = basename(path))
# Use stringr to extract filename from title
# Workaround - many entries say jpg in title, when in fact files are .png
# No longer need to avoid changing upper case to lower case, as we're using the intermediate fileset '/processed', already lower case.
filtered_tbl_source$img_filename <- ""
filtered_tbl_source <- filtered_tbl_source %>% mutate(img_filename = str_replace_all(dc_title, "^.*, ", ""))
# try to fix the jpg png mismatch by storing in a new variable image_id on which to join
filtered_tbl_source$image_id <- ""
filtered_tbl_source <- filtered_tbl_source %>% mutate(image_id = str_replace(img_filename, ".jpg$", ""))
new_pattypan_metadata$image_id <- ""
new_pattypan_metadata <- new_pattypan_metadata %>% mutate(image_id = str_replace(img_filename, ".png$", ""))
new_pattypan_metadata <- new_pattypan_metadata %>% mutate(image_id = str_replace(img_filename, ".jpg$", ""))
filtered_tbl_source <- filtered_tbl_source %>% mutate(year = str_sub(dc_coverage_temporal, start = 7, end = 10))
# jettison columns no longer needed in filtered_tb_source
filtered_tbl_source <- select(filtered_tbl_source,-dc_contributor,-dc_contributor_other, -img_filename)
new_pattypan_metadata <-  new_pattypan_metadata %>%
left_join(filtered_tbl_source, by = "image_id")
View(new_pattypan_metadata)
View(new_pattypan_metadata)
write_delim(new_pattypan_metadata, here("metadata", "check_joined_table.csv"))
# OUtput to a new file, for pasting into the xls
write_delim(new_pattypan_metadata, here("metadata", "new_pattypan_cols.csv"), delim = ",")
# Combine metadata from source repo and pattypan,
# in preparation for upload of photo collection to Wikimedia Commons
library(tidyverse)
library(here)
library(readr)
library(janitor)
library(readxl)
library(stringr)
library(tools)
# Read in metadata from source repo CSV,
# after manual cleaning of CSV in Excel to remove unused columns
tbl_source_repo_raw_export_UK_comp_collecn10283_4857 <- read_csv("metadata/source_repo_raw_export_UK_comp_collecn10283-4857.csv",
col_types = cols(`dc.contributor[en]` = col_character(),
`dc.description.abstract[en_UK]` = col_character(),
`dc.publisher[en_UK]` = col_skip(),
`dc.relation.isreferencedby[]` = col_skip(),
`dc.relation.isreferencedby[en_UK]` = col_skip(),
`dc.relation.isversionof[]` = col_skip(),
`dc.relation.isversionof[en_UK]` = col_skip(),
`dc.rights[]` = col_skip(), `dc.rights[en]` = col_skip(),
`dc.subject.classification[]` = col_skip(),
`dc.subject.classification[en_UK]` = col_skip(),
`dc.subject[]` = col_skip(), `dc.subject[en_UK]` = col_skip())) %>% clean_names()
# print("Imported source metadata is a tibble: ")
# print(as.character(is_tibble(tbl_source_repo_raw_export_UK_comp_collecn10283_4857)))
# print("distinct uri values:")
# print(distinct(tbl_source_repo_raw_export_UK_comp_collecn10283_4857, dc_identifier_uri))
# print("distinct uri2 values:")
# print(distinct(tbl_source_repo_raw_export_UK_comp_collecn10283_4857, dc_identifier_uri_2))
# Read in metadata from pattypan
tbl_pattypan_intermediate_processed_fileset_UK_Tower_Block <- read_xls("metadata/pattypan_intermediate_processed_fileset_UK_Tower_Block.xls",
col_types = c("text", "text", "text",
"text", "text", "text", "text"))
print("Imported pattypan table is typeof: ")
print(typeof(tbl_pattypan_intermediate_processed_fileset_UK_Tower_Block))
# Identify and then exclude the images already on wikimedia ie Aberdeen collection
filtered_tbl_source <- tbl_source_repo_raw_export_UK_comp_collecn10283_4857 %>%
filter(! str_detect(collection, "3304"))
# Prep the columns in order to combine by join on the image filename
# Use basename from base R to extract filename from path
new_pattypan_metadata <- tbl_pattypan_intermediate_processed_fileset_UK_Tower_Block %>% mutate(img_filename = basename(path))
# Use stringr to extract filename from title
# Workaround - many entries say jpg in title, when in fact files are .png
# No longer need to avoid changing upper case to lower case, as we're using the intermediate fileset '/processed', already lower case.
filtered_tbl_source$img_filename <- ""
filtered_tbl_source <- filtered_tbl_source %>% mutate(img_filename = str_replace_all(dc_title, "^.*, ", ""))
# try to fix the jpg png mismatch by storing in a new variable image_id on which to join
filtered_tbl_source$image_id <- ""
filtered_tbl_source <- filtered_tbl_source %>% mutate(image_id = str_replace(img_filename, ".jpg$", ""))
new_pattypan_metadata$image_id <- ""
new_pattypan_metadata <- new_pattypan_metadata %>% mutate(image_id = str_replace( str_replace(img_filename, ".png$", ""), ".jpg$", ""))
View(new_pattypan_metadata)
View(new_pattypan_metadata)
filtered_tbl_source <- filtered_tbl_source %>% mutate(year = str_sub(dc_coverage_temporal, start = 7, end = 10))
# jettison columns no longer needed in filtered_tb_source
filtered_tbl_source <- select(filtered_tbl_source,-dc_contributor,-dc_contributor_other, -img_filename)
new_pattypan_metadata <-  new_pattypan_metadata %>%
left_join(filtered_tbl_source, by = "image_id")
# OUtput to a new file, for pasting into the xls
write_delim(new_pattypan_metadata, here("metadata", "new_pattypan_cols.csv"), delim = ",")
# OUtput to a new file, for pasting into the xls
write_delim(new_pattypan_metadata, here("metadata", "new_pattypan_cols.csv"), delim = ",")
